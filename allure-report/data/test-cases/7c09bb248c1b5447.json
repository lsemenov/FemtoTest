{
  "uid" : "7c09bb248c1b5447",
  "name" : "test_ui_zlasik",
  "fullName" : "lasik_test#test_ui_zlasik",
  "historyId" : "c2142d9461ffd1a02dd748d16fafd503",
  "time" : {
    "start" : 1591981519825,
    "stop" : 1591981530135,
    "duration" : 10310
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.NoSuchElementException: Message: Element cannot be found",
  "statusTrace" : "test_setup = None\n\n    @allure.feature('Ввод операцционных парамтеров ZLasik')\n    @allure.story('Ввод допустимого операционного параметра \"Диаметр\"')\n    @allure.severity('critical')\n    def test_ui_zlasik(test_setup):\n    \n        # Входим в меню выбора операции\n        window_operation = driver.find_element_by_class_name('#32770')     # Находим окно меню\n>       button_operation = window_operation.find_element_by_id('1021')\n\nlasik_test.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:176: in find_element_by_id\n    return self.find_element(by=By.ID, value=id_)\n..\\..\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:658: in find_element\n    return self._execute(Command.FIND_CHILD_ELEMENT,\n..\\..\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:633: in _execute\n    return self._parent.execute(command, params)\n..\\..\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:321: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020073335070>\nresponse = {'sessionId': 'AwesomeSession', 'status': 7, 'value': {'error': 'no such element', 'message': 'Element cannot be found...dExecutors.FindChildElementExecutor.DoImpl()\\r\\n   в Winium.Desktop.Driver.CommandExecutors.CommandExecutorBase.Do()'}}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class = ErrorInResponseException\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            if exception_class == ErrorInResponseException:\n                raise exception_class(response, value)\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        if 'stackTrace' in value and value['stackTrace']:\n            stacktrace = []\n            try:\n                for frame in value['stackTrace']:\n                    line = self._value_or_default(frame, 'lineNumber', '')\n                    file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                    if line:\n                        file = \"%s:%s\" % (file, line)\n                    meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                    if 'className' in frame:\n                        meth = \"%s.%s\" % (frame['className'], meth)\n                    msg = \"    at %s (%s)\"\n                    msg = msg % (meth, file)\n                    stacktrace.append(msg)\n            except TypeError:\n                pass\n        if exception_class == ErrorInResponseException:\n            raise exception_class(response, message)\n        elif exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Element cannot be found\n\n..\\..\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:242: NoSuchElementException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "test_setup",
    "time" : {
      "start" : 1591981517490,
      "stop" : 1591981519823,
      "duration" : 2333
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "afterStages" : [ {
    "name" : "test_setup::0",
    "time" : {
      "start" : 1591981530266,
      "stop" : 1591981530556,
      "duration" : 290
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Ввод операцционных парамтеров ZLasik"
  }, {
    "name" : "story",
    "value" : "Ввод допустимого операционного параметра \"Диаметр\""
  }, {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "suite",
    "value" : "lasik_test"
  }, {
    "name" : "host",
    "value" : "HOME-PC"
  }, {
    "name" : "thread",
    "value" : "11796-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "lasik_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ {
      "uid" : "9fbb7c35d90d8b39",
      "status" : "passed",
      "time" : {
        "start" : 1591869635509,
        "stop" : 1591869639215,
        "duration" : 3706
      }
    }, {
      "uid" : "f0b0a8b728d13a07",
      "status" : "passed",
      "time" : {
        "start" : 1591869152667,
        "stop" : 1591869156371,
        "duration" : 3704
      }
    }, {
      "uid" : "961d8f8ebb7abf29",
      "status" : "passed",
      "time" : {
        "start" : 1591868290280,
        "stop" : 1591868293975,
        "duration" : 3695
      }
    }, {
      "uid" : "a28a9544d3f97b6f",
      "status" : "passed",
      "time" : {
        "start" : 1591868246493,
        "stop" : 1591868249996,
        "duration" : 3503
      }
    }, {
      "uid" : "2f5b71a76de2389e",
      "status" : "passed",
      "time" : {
        "start" : 1591868193699,
        "stop" : 1591868197203,
        "duration" : 3504
      }
    }, {
      "uid" : "e444c822ddaf26aa",
      "status" : "passed",
      "time" : {
        "start" : 1591867304520,
        "stop" : 1591867308124,
        "duration" : 3604
      }
    }, {
      "uid" : "72984537973042f7",
      "status" : "passed",
      "time" : {
        "start" : 1591866147290,
        "stop" : 1591866151000,
        "duration" : 3710
      }
    }, {
      "uid" : "d0bd9cf27702c9d0",
      "status" : "passed",
      "time" : {
        "start" : 1591864958442,
        "stop" : 1591864962247,
        "duration" : 3805
      }
    }, {
      "uid" : "3e2c8cc92f375d5",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: Element cannot be found",
      "time" : {
        "start" : 1591713962015,
        "stop" : 1591713972080,
        "duration" : 10065
      }
    }, {
      "uid" : "45a010f0753143a",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: Element cannot be found",
      "time" : {
        "start" : 1591713824856,
        "stop" : 1591713834940,
        "duration" : 10084
      }
    }, {
      "uid" : "3af4781147045176",
      "status" : "passed",
      "time" : {
        "start" : 1591713669730,
        "stop" : 1591713673708,
        "duration" : 3978
      }
    }, {
      "uid" : "246b7f51ba2cbb7d",
      "status" : "broken",
      "statusDetails" : "selenium.common.exceptions.NoSuchElementException: Message: Element cannot be found",
      "time" : {
        "start" : 1591691670421,
        "stop" : 1591691680500,
        "duration" : 10079
      }
    }, {
      "uid" : "ab7b227545d8ad4c",
      "status" : "passed",
      "time" : {
        "start" : 1591690290363,
        "stop" : 1591690293866,
        "duration" : 3503
      }
    }, {
      "uid" : "3956de8d4670f803",
      "status" : "broken",
      "statusDetails" : "NameError: name 'driver' is not defined",
      "time" : {
        "start" : 1591690263639,
        "stop" : 1591690263639,
        "duration" : 0
      }
    }, {
      "uid" : "3a5bf5ff4c0ca2",
      "status" : "broken",
      "statusDetails" : "NameError: name 'driver' is not defined",
      "time" : {
        "start" : 1591690210286,
        "stop" : 1591690210286,
        "duration" : 0
      }
    }, {
      "uid" : "d023b33f268e9bda",
      "status" : "passed",
      "time" : {
        "start" : 1591690171158,
        "stop" : 1591690176961,
        "duration" : 5803
      }
    } ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "a754ebda3058757",
        "reportUrl" : "http://localhost:8080/job/femto_test/7/allure/#testresult/a754ebda3058757",
        "status" : "passed",
        "time" : {
          "start" : 1591869635509,
          "stop" : 1591869639215,
          "duration" : 3706
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "7c09bb248c1b5447.json",
  "parameterValues" : [ ]
}